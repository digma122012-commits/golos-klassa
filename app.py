import os
import sqlite3
from flask import Flask, request, redirect, url_for, render_template_string, flash

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
app = Flask(__name__)
app.secret_key = os.environ.get("SECRET_KEY", "default-secret-key-for-render")

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞)
DB_PATH = 'ideas.db'

# –ü–∞—Ä–æ–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∫–∏ (–±–µ—Ä—ë—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è Render)
ADMIN_PASSWORD = os.environ.get("ADMIN_PASSWORD", "school123")

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ---
def init_db():
    conn = sqlite3.connect(DB_PATH)
    c = conn.cursor()
    c.execute('''
        CREATE TABLE IF NOT EXISTS ideas (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            text TEXT NOT NULL,
            ip TEXT NOT NULL,
            votes INTEGER DEFAULT 0,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    c.execute('''
        CREATE TABLE IF NOT EXISTS votes (
            idea_id INTEGER,
            ip TEXT,
            PRIMARY KEY (idea_id, ip)
        )
    ''')
    conn.commit()
    conn.close()

# --- HTML/CSS –≤—Å—Ç—Ä–æ–µ–Ω—ã –≤ –∫–æ–¥ (–æ–¥–∏–Ω —Ñ–∞–π–ª) ---
def get_index_html(ideas):
    return f'''
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>–ì–æ–ª–æ—Å –∫–ª–∞—Å—Å–∞</title>
        <style>
            * {{ box-sizing: border-box; }}
            body {{ font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background: #f5f7fa; margin: 0; padding: 16px; color: #333; }}
            .container {{ max-width: 700px; margin: 0 auto; background: white; padding: 20px; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); }}
            h1 {{ color: #2c3e50; text-align: center; margin-top: 0; }}
            textarea {{ width: 100%; padding: 12px; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px; font-size: 16px; resize: vertical; min-height: 80px; }}
            button {{ background: #3498db; color: white; border: none; padding: 12px 20px; border-radius: 8px; cursor: pointer; font-size: 16px; width: 100%; }}
            button:hover {{ background: #2980b9; }}
            .idea {{ background: #f8f9fa; padding: 16px; margin: 16px 0; border-radius: 10px; border-left: 4px solid #3498db; }}
            .admin-idea {{ border-left-color: #e74c3c; }}
            .meta {{ display: flex; flex-wrap: wrap; gap: 10px; margin-top: 10px; font-size: 14px; color: #666; }}
            .meta a {{ color: #e74c3c; text-decoration: none; font-weight: bold; }}
            .meta a:hover {{ text-decoration: underline; }}
            @media (max-width: 600px) {{ 
                .container {{ padding: 16px; }} 
                .meta {{ flex-direction: column; gap: 6px; }} 
                button {{ padding: 14px; }} 
            }}
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üó£Ô∏è –ì–æ–ª–æ—Å –∫–ª–∞—Å—Å–∞</h1>
            <p>–ê–Ω–æ–Ω–∏–º–Ω–æ –ø—Ä–µ–¥–ª–∞–≥–∞–π –∏–¥–µ–∏ –∏ –≥–æ–ª–æ—Å—É–π –∑–∞ –ª—É—á—à–∏–µ!</p>
            <form method="POST" action="/add">
                <textarea name="text" placeholder="–ù–∞–ø–∏—à–∏ —Å–≤–æ—é –∏–¥–µ—é (–¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤)..." maxlength="200" required></textarea>
                <button type="submit">‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–¥–µ—é</button>
            </form>
            <hr>
            <h2>–ò–¥–µ–∏ (–ø–æ –≥–æ–ª–æ—Å–∞–º)</h2>
            {"".join(f'''
            <div class="idea">
                <p>{idea["text"]}</p>
                <div class="meta">
                    <span>–ì–æ–ª–æ—Å–æ–≤: {idea["votes"]}</span>
                    <a href="/vote/{idea["id"]}">‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å</a>
                </div>
            </div>
            ''' for idea in ideas) if ideas else "<p>–ü–æ–∫–∞ –Ω–µ—Ç –∏–¥–µ–π. –ë—É–¥—å –ø–µ—Ä–≤—ã–º!</p>"}
        </div>
    </body>
    </html>
    '''

def get_admin_html(ideas, password):
    return f'''
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>–ê–¥–º–∏–Ω–∫–∞ ‚Äî –ì–æ–ª–æ—Å –∫–ª–∞—Å—Å–∞</title>
        <style>
            * {{ box-sizing: border-box; }}
            body {{ font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background: #f5f7fa; margin: 0; padding: 16px; color: #333; }}
            .container {{ max-width: 800px; margin: 0 auto; background: white; padding: 20px; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); }}
            h2 {{ color: #c0392b; }}
            .idea {{ background: #fef6f6; padding: 16px; margin: 16px 0; border-radius: 10px; border-left: 4px solid #e74c3c; }}
            .meta {{ display: flex; flex-wrap: wrap; gap: 10px; margin-top: 10px; font-size: 14px; color: #666; }}
            .meta a {{ color: #c0392b; font-weight: bold; text-decoration: none; }}
            .meta a:hover {{ text-decoration: underline; }}
            @media (max-width: 600px) {{ 
                .container {{ padding: 16px; }} 
                .meta {{ flex-direction: column; gap: 6px; }} 
            }}
        </style>
    </head>
    <body>
        <div class="container">
            <h2>üîê –ê–¥–º–∏–Ω–∫–∞ ‚Äî –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–¥–µ—è–º–∏</h2>
            <p>–¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —à–∫–æ–ª—ã.</p>
            {"".join(f'''
            <div class="idea">
                <p><strong>{idea["text"]}</strong></p>
                <div class="meta">
                    <span>IP –∞–≤—Ç–æ—Ä–∞: {idea["ip"]}</span>
                    <span>–ì–æ–ª–æ—Å–æ–≤: {idea["votes"]}</span>
                    <span>–î–æ–±–∞–≤–ª–µ–Ω–æ: {idea["created_at"]}</span>
                    <a href="/admin/delete/{idea["id"]}?password={password}" onclick="return confirm('–£–¥–∞–ª–∏—Ç—å –∏–¥–µ—é?')">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</a>
                </div>
            </div>
            ''' for idea in ideas) if ideas else "<p>–ù–µ—Ç –∏–¥–µ–π.</p>"}
            <a href="/">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
        </div>
    </body>
    </html>
    '''

# --- –†–æ—É—Ç—ã ---
@app.route('/')
def index():
    conn = sqlite3.connect(DB_PATH)
    conn.row_factory = sqlite3.Row
    ideas = [dict(row) for row in conn.execute("SELECT id, text, votes FROM ideas ORDER BY votes DESC, created_at DESC")]
    conn.close()
    return get_index_html(ideas)

@app.route('/add', methods=['POST'])
def add_idea():
    text = request.form.get('text', '').strip()
    if 1 <= len(text) <= 200:
        user_ip = request.environ.get('HTTP_X_FORWARDED_FOR', request.remote_addr)
        conn = sqlite3.connect(DB_PATH)
        conn.execute("INSERT INTO ideas (text, ip) VALUES (?, ?)", (text, user_ip))
        conn.commit()
        conn.close()
    return redirect('/')

@app.route('/vote/<int:idea_id>')
def vote(idea_id):
    user_ip = request.environ.get('HTTP_X_FORWARDED_FOR', request.remote_addr)
    conn = sqlite3.connect(DB_PATH)
    exists = conn.execute("SELECT 1 FROM votes WHERE idea_id = ? AND ip = ?", (idea_id, user_ip)).fetchone()
    if not exists:
        conn.execute("UPDATE ideas SET votes = votes + 1 WHERE id = ?", (idea_id,))
        conn.execute("INSERT INTO votes (idea_id, ip) VALUES (?, ?)", (idea_id, user_ip))
        conn.commit()
    conn.close()
    return redirect('/')

@app.route('/admin')
def admin_panel():
    password = request.args.get('password')
    if password != ADMIN_PASSWORD:
        return redirect('/')
    conn = sqlite3.connect(DB_PATH)
    conn.row_factory = sqlite3.Row
    ideas = [dict(row) for row in conn.execute("SELECT * FROM ideas ORDER BY created_at DESC")]
    conn.close()
    return get_admin_html(ideas, password)

@app.route('/admin/delete/<int:idea_id>')
def delete_idea(idea_id):
    password = request.args.get('password')
    if password != ADMIN_PASSWORD:
        return redirect('/')
    conn = sqlite3.connect(DB_PATH)
    conn.execute("DELETE FROM ideas WHERE id = ?", (idea_id,))
    conn.execute("DELETE FROM votes WHERE idea_id = ?", (idea_id,))
    conn.commit()
    conn.close()
    return redirect(f'/admin?password={password}')

# --- –ó–∞–ø—É—Å–∫ –Ω–∞ Render ---
if __name__ == '__main__':
    init_db()
    # Render –ø–µ—Ä–µ–¥–∞—ë—Ç –ø–æ—Ä—Ç —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è PORT
    port = int(os.environ.get('PORT', 10000))
    # –í–∞–∂–Ω–æ: host='0.0.0.0' –∏ debug=False –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
    app.run(host='0.0.0.0', port=port, debug=False)